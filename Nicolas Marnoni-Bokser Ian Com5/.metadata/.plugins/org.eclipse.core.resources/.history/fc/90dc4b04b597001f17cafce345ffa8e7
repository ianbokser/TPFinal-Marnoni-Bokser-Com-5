package tpFinal;

import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Aerolinea implements IAerolinea {
	private Map<Integer, Cliente> clientes;
	private Map<String, Aeropuerto> aeropuertos;
	private Map<String, Vuelo> vuelos;
	  private int contadorVuelosPublicos;
	
	
	public Aerolinea(String nombre, String CUIT) {
		this.nombre=nombre;
		this.CUIT=CUIT;
		this.clientes = new HashMap<>();
		this.aeropuertos = new HashMap<>();
		this.vuelos = new HashMap<>();
        this.contadorVuelosPublicos = 1;
	}

	@Override
	public void registrarCliente(int dni, String nombre, String telefono) {
		 if (clientes.containsKey(dni)) {
	            throw new IllegalArgumentException("El cliente con DNI " + dni + " ya está registrado.");
	        }
	     Cliente nuevoCliente = new Cliente(dni, nombre, telefono);
	     clientes.put(dni, nuevoCliente);
	     System.out.println("Cliente registrado exitosamente.");
	}

	@Override
	public void registrarAeropuerto(String nombre, String pais, String provincia, String direccion) {
		if (aeropuertos.containsKey(nombre)) {
            throw new IllegalArgumentException("El aeropuerto con nombre " + nombre + " ya está registrado.");
        }
		Aeropuerto nuevoAeropuerto = new Aeropuerto(nombre, pais, provincia, direccion);
		aeropuertos.put(nombre, nuevoAeropuerto);
		System.out.println("Aeropuerto registrado exitosamente.");
		
	}

	@Override
	public String registrarVueloPublicoNacional(String origen, String destino, String fecha, int tripulantes,
			double valorRefrigerio, double[] precios, int[] cantAsientos) {
        if (!aeropuertos.containsKey(origen) || !aeropuertos.containsKey(destino) ||
                !aeropuertos.get(origen).getPais().equals("Argentina") || !aeropuertos.get(destino).getPais().equals("Argentina")) {
            throw new IllegalArgumentException("Origen y destino deben ser aeropuertos en Argentina.");
        }
        if (precios.length != 2 || cantAsientos.length != 2) {
            throw new IllegalArgumentException("Deben especificarse dos precios y dos cantidades de asientos.");
        }
        
        Date fechaVuelo;
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
            fechaVuelo = (Date) formatoFecha.parse(fecha);
        } catch (ParseException e) {
            throw new IllegalArgumentException("Formato de fecha inválido. Use 'yyyy-MM-dd'.");
        }
        
        String codigoVuelo = contadorVuelosPublicos++ + "-PUB";
        Vuelo vuelo = new VueloNacional(codigoVuelo, origen, destino, fechaVuelo, tripulantes, valorRefrigerio, precios, cantAsientos);
        vuelos.put(codigoVuelo, vuelo);
        return codigoVuelo;
    }

	@Override
	public String registrarVueloPublicoInternacional(String origen, String destino, String fecha, int tripulantes,
			double valorRefrigerio, int cantRefrigerios, double[] precios, int[] cantAsientos, String[] escalas) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String VenderVueloPrivado(String origen, String destino, String fecha, int tripulantes, double precio,
			int dniComprador, int[] acompaniantes) {
		
		return null;
	}

	@Override
	public Map<Integer, String> asientosDisponibles(String codVuelo) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int venderPasaje(int dni, String codVuelo, int nroAsiento, boolean aOcupar) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<String> consultarVuelosSimilares(String origen, String destino, String Fecha) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void cancelarPasaje(int dni, String codVuelo, int nroAsiento) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void cancelarPasaje(int dni, int codPasaje) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public List<String> cancelarVuelo(String codVuelo) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public double totalRecaudado(String destino) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String detalleDeVuelo(String codVuelo) {
		// TODO Auto-generated method stub
		return null;
	}


}
